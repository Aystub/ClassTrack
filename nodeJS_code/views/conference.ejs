<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="">
  <link rel="icon" href="../../favicon.ico">

  <title>ClassTrack</title>

  <link rel="stylesheet" type="text/css" href="css/reset.css">

  <!-- Bootstrap core CSS -->
  <link href="css/bootstrap.min.css" rel="stylesheet">
  <link href="css/style.css" rel="stylesheet">

  <link rel="stylesheet" type="text/css" href="css/chatroom_demo.css">
    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <script src="/socket.io/socket.io.js"></script>

</head>
<body>

  <div class="wrapper">


  <div class="navbar-custom-global navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>

          <a class="navbar-brand" onClick="history.go(-1); return true;" >ClassTrack</a>
        </div>
        <div class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
          </ul>
          <div class="nav navbar-nav navbar-right">
          </div>
        </div><!--/.nav-collapse -->
      </div>
    </div>


    <div class="row">
    <!-- Has to be on one line due to whitespace being included -->
      <div class="col-md-6" id="video_container"><video id="localVideo" autoplay style="background-color:#FFF"></video></div><div class="col-md-6" id="remote_video_container"><video id="remoteVideo" autoplay style="background-color:#FFF"></div> 
    </div>
    <div class="row video_controls">
        <button id="connect_button" class="custom_button" onclick="initialize()">Connect</button>
        <!-- <button id="mute_button" class="custom_button" onclick="mute()">Mute</button>-->
        <button id="disconnect_button" class="custom_button" onclick="endCall()">Disconnect</button>
        <!-- <button id="screen_sharing_button" class="custom_button" onclick="shareScreen()">Screen Sharing</button> -->

    </div>

    
      

    <div class="row" style="width:50%; margin-left: auto; margin-right: auto">
      <form id="chatform">
      <input style="width:100%" type="text" id="chatText"></input>
    </div>
    <div class="row">
      <div id="chatMembers" style="height:20px; width:50%; margin-left:auto; margin-right:auto">
        <ul id="chatMembersList">
	  <li><strong>Current Members:</strong></li>
        </ul>
      </div>
    </div>
    <div class="row">
      <div style="margin-left:auto; margin-right:auto; width:50%; overflow: auto" id="chatbox"></div>
    </div>




        <script src="js/jquery.js"></script>
        <script src="js/modernizr-latest.js"></script>
        <script src="js/adapter.js"></script>
        <script>
            debugAlerts = false;
            var socket = io();
            var roomkey = <%= roomkey %>;
            var user_id = '<%= user_id %>';
            var name = '<%= name %>';
            var roomMembers =  <%- JSON.stringify(roomMembers) %>['members']; 
            var initiator = <%= initiator %>;
            var audio_receive_codec = '<%= audio_receive_codec %>';
            var audio_send_codec = '<%= audio_send_codec %>';

            $(document).ready(function(){

            socket.emit('user_id set', user_id);
            socket.emit('name set', name);
            socket.emit('join room', roomkey);
            
             //console.log("This is the user_id: " + user_id);

             

      for(var x = 0; x < roomMembers.length; x++)
      {
         $('#chatMembersList').append('<li class="chatMemberElement">' + roomMembers[x] + '</li>');
      }


     $("#chatform").submit(function(e)
     {
       e.preventDefault();
       var parsedChat = $('#chatText').val().replace("<", "&lt").replace(">", "&gt");
       socket.emit('send chat message', parsedChat);
       $('#chatText').val('');

       $("#chatbox").animate({ scrollTop: $("#chatbox")[0].scrollHeight}, 1000);


     });

     socket.on('receive chat message', function(data){
       $('#chatbox').append('<b>' + data.name + ': </b>' + data.msg + '<br/>');

       $("#chatbox").animate({ scrollTop: $("#chatbox")[0].scrollHeight}, 1000);


     });

     socket.on('WebRTC message', function(message){
       console.log('Server->Client: ' + message.data);
       var msg = message;
       console.log('Server->Client: ' + JSON.stringify(msg));
       if(msg.type === 'joined')
       {
         channelReady = true;
         multipleParticipants = true;
         if(initialized){
           maybeStart();
         }
         else{
           initialize();
         }
       }

        // Since the turn response is async and also GAE might disorder the
        // Message delivery due to possible datastore query at server side,
        // So callee needs to cache messages before peerConnection is created.
        if (!initiator && !started) {
          if (msg.type === 'offer') {
            // Add offer to the beginning of msgQueue, since we can't handle
            // Early candidates before offer at present.
            msgQueue.unshift(msg);
            // Callee creates PeerConnection
            signalingReady = true;
            maybeStart();
          } else {
            msgQueue.push(msg);
          }
        } else {
          processSignalingMessage(msg);
        }
    });

    socket.on('resetInitiator', function(data){
      initiator = 0;
    });

    socket.on('joined', function(data){
      //alert(msg.name + " joined");
      //$('#chatMembersList').append('<li class="chatMemberElement">' + data.name + '</li>');
      $('#chatbox').append('<b> ' + data.name + ' has joined the room! </b><br/>');
    });

    socket.on('disconnect', function(data){
      var name = data.name;
      $("li:contains('"+name+"')").remove();
      $('#chatbox').append('<b>' + name + ' has left the room </b><br/>');
      handleDisconnect();
    });

    socket.on('member list', function(members){
      $('#chatMembersList').empty();
      $('#chatMembersList').append('<li><strong>Current Members: </strong></li>');
      for(var x = 0; x < members.length; x++)
      {
        $('#chatMembersList').append('<li class="chatMemberElement">' + members[x] + '</li>');
      }
      //$('#chatbox').append('<b>' + members[members.length-1] + ' has joined! </b> <br/>');
    });
    initialized = true; 
  }); // ------ Ends $(document).ready -----

</script>
<script src="js/WebRTC.js"></script>









  </div>

    <!-- Bootstrap core JavaScript
  ================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
  <script src="js/jquery.js"></script>
  <script src="js/bootstrap.min.js"></script>
  <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
  <script src="js/ie10-viewport-bug-workaround.js"></script>

</body>
</html>
